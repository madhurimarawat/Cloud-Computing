# ================================================================
#  GitHub Actions Workflow: Update Repo Age Badge
# ================================================================
#  🔹 This workflow automatically updates the repository age badge  
#     in the README.md file.
#  
#  ✅ Runs daily at midnight (00:00 UTC) to update repo age.
#  ✅ Can be manually triggered from the GitHub Actions UI.
#  
#  📌 Steps:
#  1️⃣ Fetches the repository creation date.
#  2️⃣ Calculates the repository age (Years, Months, Days).
#  3️⃣ Ensures a **default repo age** (`0Y 6M 15D`) if workflow fails.
#  4️⃣ Updates the repo age badge in the README.md.
#  5️⃣ Commits and pushes the updated README.md file back to the repository.
#  
#  🚀 No personal access token (PAT) required! Uses `GITHUB_TOKEN`.
# ================================================================

name: Update Repo Age

on:
  schedule:
    - cron: "0 0 * * *"  # ✅ Runs daily at midnight to update repo age
  workflow_dispatch:       # ✅ Allows manual trigger

jobs:
  update-age:
    runs-on: ubuntu-latest
    permissions: write-all  # ✅ Allows GitHub Actions to push changes

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}  # ✅ Uses GitHub's built-in token

      - name: Get Repo Creation Date
        id: repo_info
        run: |
          CREATION_DATE=$(curl -s https://api.github.com/repos/madhurimarawat/Cloud-Computing | jq -r '.created_at' | cut -d'T' -f1)
          
          # ✅ If API request fails, set a fallback date
          if [ -z "$CREATION_DATE" ] || [ "$CREATION_DATE" = "null" ]; then
            CREATION_DATE="2024-08-08"  # Set a default repo creation date
          fi

          echo "CREATION_DATE=$CREATION_DATE" >> $GITHUB_ENV

      - name: Calculate Repository Age
        id: calculate_age
        run: |
          START_DATE=$(date -d "$CREATION_DATE" +%s 2>/dev/null || echo "0")
          CURRENT_DATE=$(date +%s)

          if [ "$START_DATE" = "0" ]; then
            REPO_AGE="0Y 6M 15D"  # ✅ Set default age if calculation fails
          else
            AGE_DAYS=$(( (CURRENT_DATE - START_DATE) / 86400 ))
            AGE_YEARS=$(( AGE_DAYS / 365 ))
            AGE_MONTHS=$(( (AGE_DAYS % 365) / 30 ))
            AGE_REMAINING_DAYS=$(( AGE_DAYS % 30 ))
            REPO_AGE="${AGE_YEARS}Y ${AGE_MONTHS}M ${AGE_REMAINING_DAYS}D"
          fi

          echo "REPO_AGE=$REPO_AGE" >> $GITHUB_ENV

      - name: Update README.md with New Badge
        run: |
          # Color for Repo Age Badge
          AGE_BADGE_COLOR="%23FFA07A"  # Sunset Orange

          # ✅ Generate Badge URL with default fallback
          AGE_BADGE_URL="https://img.shields.io/badge/Repo%20Age-${REPO_AGE:-0Y 1M 5D}-$AGE_BADGE_COLOR?style=for-the-badge&logo=github"

          # ✅ Replace Badge in README
          sed -i 's|https://img.shields.io/badge/Repo%20Age-[^?]*|'"$AGE_BADGE_URL"'|' README.md

      - name: Commit & Push Changes
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # ✅ Uses GitHub's built-in token
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "actions@github.com"

          git add README.md
          git commit -m "Updated repository age badge (with fail-safe fallback)" || exit 0
          git push origin main
